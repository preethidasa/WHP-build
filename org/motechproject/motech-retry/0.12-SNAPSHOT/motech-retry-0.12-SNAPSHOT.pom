<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <name>motech-retry</name>
    <groupId>org.motechproject</groupId>
    <artifactId>motech-retry</artifactId>
    <version>0.12-SNAPSHOT</version>

    <properties>
        <spring.version>3.1.0.RELEASE</spring.version>
    </properties>

    <parent>
        <artifactId>motech-contrib</artifactId>
        <groupId>org.motechproject</groupId>
        <version>0.12-SNAPSHOT</version>
    </parent>

    <repositories>
        <repository>
            <id>central</id>
            <url>http://repo1.maven.org/maven2</url>
            <name>Repository for dependencies</name>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>motech.nexus.snapshots</id>
            <name>Motech Snapshots Repository</name>
            <url>http://nexus.motechproject.org/content/repositories/snapshots</url>
        </repository>
        <repository>
            <id>motech.nexus.releases</id>
            <name>Motech Releases Repository</name>
            <url>http://nexus.motechproject.org/content/repositories/releases</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.motechproject</groupId>
            <artifactId>motech-platform-common-api</artifactId>
            <version>${motech.version}</version>
        </dependency>
        <dependency>
            <groupId>org.motechproject</groupId>
            <artifactId>motech-platform-server-api</artifactId>
            <version>${motech.version}</version>
        </dependency>
        <dependency>
            <groupId>org.motechproject</groupId>
            <artifactId>motech-scheduler</artifactId>
            <version>${motech.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>1.7.1</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20080701</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.8.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.13</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.unitils</groupId>
            <artifactId>unitils-core</artifactId>
            <version>3.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.1.5</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>${project.parent.relativePath}/../build/maven.properties</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>drop-quartz-schema</id>
                        <phase>process-resources</phase>
                        <configuration>
                            <target>
                                <echo message="Dropping Quartz databases" />
                                <path id="dependencies">
                                    <fileset file="../build/lib/mysql-connector-java-5.1.13.jar" />
                                </path>
                                <sql driver="${mysql.driver}" url="jdbc:mysql://${mysql.server}:${mysql.port}?autoReconnect=true" userid="${mysql.user}" classpathref="dependencies" password="${mysql.password}" onerror="continue">
                                    drop database if exists ${mysql.dbQuartz};
                                    create database ${mysql.dbQuartz};
                                </sql>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>setup-aggregation-schema</id>
                        <phase>process-resources</phase>
                        <configuration>
                            <target>
                                <echo message="Quartz schema loading: START" />
                                <path id="dependencies">
                                    <fileset file="../build/lib/mysql-connector-java-5.1.13.jar" />
                                </path>
                                <sql driver="${mysql.driver}" url="jdbc:mysql://${mysql.server}:${mysql.port}/${mysql.dbQuartz}?autoReconnect=true" userid="${mysql.user}" classpathref="dependencies" password="${mysql.password}">
                                    <path>
                                        <fileset dir="../build/sql">
                                            <include name="tables_mysql_innodb_qrtz.2.1.sql" />
                                        </fileset>
                                    </path>
                                </sql>
                                <echo message="Quartz schema loading: END" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
