<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.ei.drishti</groupId>
  <artifactId>drishti</artifactId>
  <packaging>pom</packaging>
  <version>0.1-SNAPSHOT</version>
  <name>Drishti</name>
  <url>http://github.com/modilabs/dristhi</url>

  <modules>
    <module>drishti-mother-child</module>
    <module>drishti-web</module>
    <module>drishti-scheduler</module>
    <module>drishti-common</module>
  </modules>

  <properties>
    <db.server>localhost</db.server>
    <db.port>5984</db.port>
    <db.name.drishti>drishti</db.name.drishti>
    <db.name.commcare-api>commcare</db.name.commcare-api>
    <db.name.motech-scheduletracking>motech-scheduletracking</db.name.motech-scheduletracking>
    <main.basedir>${project.basedir}</main.basedir>
    <motech.version>0.11-SNAPSHOT</motech.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <spring.version>3.0.5.RELEASE</spring.version>
  </properties>

  <distributionManagement>
    <repository>
      <id>motech.nexus</id>
      <name>Motech Releases Repository</name>
      <url>http://nexus.motechproject.org/content/repositories/releases</url>
      <uniqueVersion>false</uniqueVersion>
    </repository>
    <snapshotRepository>
      <id>motech.nexus</id>
      <name>Motech Snapshots Repository</name>
      <url>http://nexus.motechproject.org/content/repositories/snapshots</url>
      <uniqueVersion>false</uniqueVersion>
    </snapshotRepository>
  </distributionManagement>

  <pluginRepositories>
    <pluginRepository>
      <id>jasmine-js-bdd</id>
      <name>Jasmine JavaScript BDD Repository</name>
      <url>http://searls-maven-repository.googlecode.com/svn/trunk/snapshots</url>
    </pluginRepository>
  </pluginRepositories>

  <repositories>
    <repository>
      <id>central</id>
      <url>http://repo1.maven.org/maven2</url>
      <name>Repository for dependencies</name>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>spring-maven-release</id>
      <name>Spring Maven Release Repository</name>
      <url>http://maven.springframework.org/release</url>
    </repository>
    <repository>
      <id>spring-maven-milestone</id>
      <name>Spring Maven Milestone Repository</name>
      <url>http://maven.springframework.org/milestone</url>
    </repository>
    <repository>
      <id>motech.nexus</id>
      <name>Motech Snapshots Repository</name>
      <url>http://nexus.motechproject.org/content/repositories/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
    </repository>
  </repositories>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <outputDirectory/>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.5</version>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>${main.basedir}/build/maven.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.6</version>
        <executions>
          <execution>
            <id>Drop DB Before Unit and Repository Tests</id>
            <phase>process-test-classes</phase>
            <configuration>
              <target>
                <echo message="Dropping DBs: START"/>
                <exec executable="curl">
                  <arg value="-s"/>
                  <arg value="-S"/>
                  <arg value="-X"/>
                  <arg value="DELETE"/>
                  <arg value="http://${db.server}:${db.port}/${db.name.drishti}"/>
                  <arg value="http://${db.server}:${db.port}/${db.name.motech-scheduletracking}"/>
                  <arg value="http://${db.server}:${db.port}/${db.name.commcare-api}"/>
                </exec>
                <echo message="Dropping DB: END"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>setup-quartz-schema-before-test</id>
            <phase>process-test-classes</phase>
            <configuration>
              <target>
                <echo message="Quartz schema loading: START"/>
                <path id="dependencies">
                  <fileset file="${main.basedir}/build/lib/mysql-connector-java-5.1.13.jar"/>
                </path>
                <sql driver="${mysql.driver}"
                  url="jdbc:mysql://${mysql.server}:${mysql.port}?autoReconnect=true"
                  userid="${mysql.user}"
                  classpathref="dependencies"
                  password="${mysql.password}">
                  drop database if exists ${mysql.db};
                  create database ${mysql.db};
                </sql>
                <sql driver="${mysql.driver}"
                  url="jdbc:mysql://${mysql.server}:${mysql.port}/${mysql.db}?autoReconnect=true"
                  userid="${mysql.user}"
                  classpathref="dependencies"
                  password="${mysql.password}"
                  src="${main.basedir}/build/sql/tables_mysql_innodb.sql"/>
                <echo message="Quartz schema loading: END"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>setup-quartz-schema-after-test</id>
            <phase>prepare-package</phase>
            <configuration>
              <target>
                <echo message="Quartz schema loading: START"/>
                <path id="dependencies">
                  <fileset file="${main.basedir}/build/lib/mysql-connector-java-5.1.13.jar"/>
                </path>
                <sql driver="${mysql.driver}"
                  url="jdbc:mysql://${mysql.server}:${mysql.port}?autoReconnect=true"
                  userid="${mysql.user}"
                  classpathref="dependencies"
                  password="${mysql.password}">
                  drop database if exists ${mysql.db};
                  create database ${mysql.db};
                </sql>
                <sql driver="${mysql.driver}"
                  url="jdbc:mysql://${mysql.server}:${mysql.port}/${mysql.db}?autoReconnect=true"
                  userid="${mysql.user}"
                  classpathref="dependencies"
                  password="${mysql.password}"
                  src="${main.basedir}/build/sql/tables_mysql_innodb.sql"/>
                <echo message="Quartz schema loading: END"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.12</version>
    </dependency>
  </dependencies>
</project>
