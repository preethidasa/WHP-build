<repository lastmodified='20120706050301.770'>
  <resource id='org.motechproject.motech-alerts-api/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-alerts-api' presentationname='MoTeCH Alerts API' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-alerts-api/0.12-SNAPSHOT/motech-alerts-api-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>Motech Alerts API</description>
    <size>31982</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-alerts-api'/>
      <p n='presentationname' v='MoTeCH Alerts API'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.alerts.contract'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.joda.time,org.motechproject.server.alerts.domain'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.alerts.domain'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.ektorp.support,org.joda.time,org.motechproject.model,org.codehaus.jackson.annotate,org.motechproject.util,ch.lambdaj.function.matcher,ch.lambdaj,org.hamcrest,org.motechproject.server.alerts.contract,org.motechproject.server.alerts.repository'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.alerts.repository'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.ektorp.support,org.ektorp,org.joda.time,org.motechproject.server.alerts.domain,org.springframework.beans.factory.annotation,org.motechproject.dao,org.springframework.stereotype'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.alerts.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.server.alerts.domain,org.springframework.util,org.springframework.beans.factory.annotation,org.springframework.stereotype,org.motechproject.server.alerts.repository,org.motechproject.server.alerts.contract,org.ektorp,org.slf4j'/>
    </capability>
    <require name='package' filter='(&amp;(package=ch.lambdaj))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj</require>
    <require name='package' filter='(&amp;(package=ch.lambdaj.function.matcher))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj.function.matcher</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.codehaus.jackson.annotate;version="[1.9,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.hamcrest))' extend='false' multiple='false' optional='false'>Import package org.hamcrest</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.motechproject.util))' extend='false' multiple='false' optional='false'>Import package org.motechproject.util</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.util;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-appointments/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-appointments' presentationname='MoTeCH Appointments' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-appointments/0.12-SNAPSHOT/motech-appointments-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>Motech Appointments</description>
    <size>14642</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-appointments'/>
      <p n='presentationname' v='MoTeCH Appointments'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.appointments.api'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.appointments.api.model'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.joda.time,org.motechproject.model,org.codehaus.jackson.annotate,org.apache.commons.lang.builder,org.motechproject.util,org.ektorp.support'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang.builder))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang.builder</require>
    <require name='package' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.codehaus.jackson.annotate;version="[1.9,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.motechproject.util))' extend='false' multiple='false' optional='false'>Import package org.motechproject.util</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-appointments/0.10.0.SNAPSHOT' symbolicname='org.motechproject.motech-appointments' presentationname='MoTeCH Appointments' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-appointments/0.10-SNAPSHOT/motech-appointments-0.10-SNAPSHOT.jar' version='0.10.0.SNAPSHOT'>
    <description>Motech Appointments</description>
    <size>12812</size>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-appointments'/>
      <p n='presentationname' v='MoTeCH Appointments'/>
      <p n='version' t='version' v='0.10.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.appointments.api'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.appointments.api.model'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.joda.time,org.motechproject.model,org.codehaus.jackson.annotate,org.apache.commons.lang.builder,org.motechproject.util,org.ektorp.support'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='true'>Import package javax.servlet;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang.builder))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.lang.builder;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.codehaus.jackson.annotate;resolution:=optional;version="[1.7,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='true'>Import package org.ektorp;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='true'>Import package org.ektorp.impl;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='true'>Import package org.ektorp.spring;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='true'>Import package org.ektorp.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='true'>Import package org.joda.time;resolution:=optional;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='true'>Import package org.motechproject.model;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='true'>Import package org.motechproject.server.event.annotations;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.util))' extend='false' multiple='false' optional='true'>Import package org.motechproject.util;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.framework;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.http;resolution:=optional;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.util.tracker;resolution:=optional;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.slf4j;resolution:=optional;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.web.context;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.web.servlet;resolution:=optional;version="[3.0,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-appointments/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-appointments' presentationname='MoTeCH Appointments' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-appointments/0.11-SNAPSHOT/motech-appointments-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>Motech Appointments</description>
    <size>14603</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-appointments'/>
      <p n='presentationname' v='MoTeCH Appointments'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.appointments.api'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.appointments.api.model'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.joda.time,org.motechproject.model,org.codehaus.jackson.annotate,org.apache.commons.lang.builder,org.motechproject.util,org.ektorp.support'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang.builder))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang.builder</require>
    <require name='package' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.codehaus.jackson.annotate;version="[1.9,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.motechproject.util))' extend='false' multiple='false' optional='false'>Import package org.motechproject.util</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-cmslite-api/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-cmslite-api' presentationname='MoTeCH CMS lite API' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-cmslite-api/0.11-SNAPSHOT/motech-cmslite-api-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>MoTeCH is a software system from Grameen Foundation that harnesses the ubiquity        of mobile phones to deliver and receive information from patient and caregivers.</description>
    <size>24012</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-cmslite-api'/>
      <p n='presentationname' v='MoTeCH CMS lite API'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.cmslite.api.model'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.model,org.codehaus.jackson.annotate,org.ektorp,org.ektorp.support'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.cmslite.api.repository'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.ektorp.support,org.motechproject.cmslite.api.model,org.ektorp,org.springframework.beans.factory.annotation,org.springframework.stereotype,org.motechproject.dao'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.cmslite.api.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.cmslite.api.model,org.springframework.stereotype,org.springframework.beans.factory.annotation,org.motechproject.cmslite.api.repository'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.cmslite.api.web'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='javax.servlet,org.apache.log4j,org.ektorp,org.motechproject.cmslite.api.model,org.springframework.context.support,org.springframework.context,org.motechproject.cmslite.api.service,javax.servlet.http'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='false'>Import package org.apache.log4j</require>
    <require name='package' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.codehaus.jackson.annotate;version="[1.9,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-cmslite-api/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-cmslite-api' presentationname='MoTeCH CMS lite API' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-cmslite-api/0.12-SNAPSHOT/motech-cmslite-api-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>MoTeCH is a software system from Grameen Foundation that harnesses the ubiquity        of mobile phones to deliver and receive information from patient and caregivers.</description>
    <size>24055</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-cmslite-api'/>
      <p n='presentationname' v='MoTeCH CMS lite API'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.cmslite.api.model'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.model,org.codehaus.jackson.annotate,org.ektorp,org.ektorp.support'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.cmslite.api.repository'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.ektorp.support,org.motechproject.cmslite.api.model,org.ektorp,org.springframework.beans.factory.annotation,org.springframework.stereotype,org.motechproject.dao'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.cmslite.api.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.cmslite.api.model,org.springframework.stereotype,org.springframework.beans.factory.annotation,org.motechproject.cmslite.api.repository'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.cmslite.api.web'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='javax.servlet,org.apache.log4j,org.ektorp,org.motechproject.cmslite.api.model,org.springframework.context.support,org.springframework.context,org.motechproject.cmslite.api.service,javax.servlet.http'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='false'>Import package org.apache.log4j</require>
    <require name='package' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.codehaus.jackson.annotate;version="[1.9,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-demo/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-demo' presentationname='MoTeCH Demo App' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-demo/0.11-SNAPSHOT/motech-demo-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>Motech Demo Application</description>
    <size>18151</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-demo'/>
      <p n='presentationname' v='MoTeCH Demo App'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.demo'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.springframework.osgi.web.context.support,javax.servlet,org.motechproject.server.event.annotations,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,org.springframework.beans.factory,org.motechproject.scheduler.domain'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.demo.web'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.osgi.context,org.springframework.web.servlet.view,org.osgi.framework,javax.servlet.http,org.motechproject.server.demo.service,org.springframework.web.servlet,org.springframework.beans.factory.annotation,org.springframework.web.bind.annotation,org.springframework.stereotype,org.motechproject.ivr.service'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.demo.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.domain,org.motechproject.server.event.annotations,org.motechproject.server.demo,org.motechproject.ivr.model,org.slf4j,org.motechproject.ivr.service'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=org.motechproject.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.service</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.gateway))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.gateway</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.demo.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.demo.service</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.context)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.context;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.bind.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.mvc;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.view)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.view;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-demo/0.10.0.SNAPSHOT' symbolicname='org.motechproject.motech-demo' presentationname='MoTeCH Demo App' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-demo/0.10-SNAPSHOT/motech-demo-0.10-SNAPSHOT.jar' version='0.10.0.SNAPSHOT'>
    <description>Motech Demo Application</description>
    <size>11974</size>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-demo'/>
      <p n='presentationname' v='MoTeCH Demo App'/>
      <p n='version' t='version' v='0.10.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.demo'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,javax.servlet,org.motechproject.server.event.annotations,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,org.springframework.beans.factory,org.motechproject.model'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.demo.web'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.web.servlet.mvc,org.motechproject.server.demo.service,org.springframework.web.servlet,org.springframework.beans.factory.annotation,org.slf4j,javax.servlet.http'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.demo.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.gateway,org.motechproject.server.event.annotations,org.motechproject.context,org.motechproject.model,org.motechproject.server.demo,org.motechproject.ivr.model,org.slf4j,org.motechproject.ivr.service'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='true'>Import package javax.servlet;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='true'>Import package javax.servlet.http;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='true'>Import package org.ektorp;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='true'>Import package org.ektorp.impl;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='true'>Import package org.ektorp.spring;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.context))' extend='false' multiple='false' optional='true'>Import package org.motechproject.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.gateway))' extend='false' multiple='false' optional='true'>Import package org.motechproject.gateway;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.model))' extend='false' multiple='false' optional='true'>Import package org.motechproject.ivr.model;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.service))' extend='false' multiple='false' optional='true'>Import package org.motechproject.ivr.service;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='true'>Import package org.motechproject.model;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.demo.service))' extend='false' multiple='false' optional='true'>Import package org.motechproject.server.demo.service;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='true'>Import package org.motechproject.server.event.annotations;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.framework;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.http;resolution:=optional;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.util.tracker;resolution:=optional;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.slf4j;resolution:=optional;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory.annotation;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.web.context;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.web.servlet;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.web.servlet.mvc;resolution:=optional;version="[3.0,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-demo/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-demo' presentationname='MoTeCH Demo App' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-demo/0.12-SNAPSHOT/motech-demo-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>Motech Demo Application</description>
    <size>18634</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-demo'/>
      <p n='presentationname' v='MoTeCH Demo App'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.demo'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.springframework.osgi.web.context.support,javax.servlet,org.motechproject.server.event.annotations,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,org.springframework.beans.factory,org.motechproject.scheduler.domain'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.demo.web'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.osgi.context,org.springframework.web.servlet.view,org.osgi.framework,javax.servlet.http,org.motechproject.server.demo.service,org.springframework.web.servlet,org.springframework.beans.factory.annotation,org.springframework.web.bind.annotation,org.springframework.stereotype,org.motechproject.ivr.service'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.demo.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.domain,org.motechproject.server.event.annotations,org.motechproject.server.demo,org.motechproject.ivr.model,org.slf4j,org.motechproject.ivr.service'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.service</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.gateway))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.gateway</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.demo.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.demo.service</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.context)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.context;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.bind.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.mvc;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.view)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.view;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-ivr-asterisk/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-ivr-asterisk' presentationname='MoTeCH IVR Asterisk' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-ivr-asterisk/0.12-SNAPSHOT/motech-ivr-asterisk-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>MoTeCH is a software system from Grameen Foundation that harnesses the ubiquity        of mobile phones to deliver and receive information from patient and caregivers.</description>
    <size>13050</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-ivr-asterisk'/>
      <p n='presentationname' v='MoTeCH IVR Asterisk'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.asterisk.callback'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.domain,org.motechproject.scheduler.context,org.asteriskjava.live,org.motechproject.ivr.model,org.motechproject.scheduler.event,org.motechproject.ivr.service'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.asterisk'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.springframework.osgi.web.context.support,javax.servlet,org.motechproject.server.event.annotations,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,org.springframework.beans.factory,org.motechproject.server.asterisk.callback,org.apache.commons.codec,org.apache.commons.codec.net,org.asteriskjava.live,org.motechproject.ivr.model,org.motechproject.ivr.service'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.codec)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.codec;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.codec.net)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.codec.net;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='false'>Import package org.apache.log4j</require>
    <require name='package' filter='(&amp;(package=org.asteriskjava)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.asteriskjava;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.asteriskjava.live)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.asteriskjava.live;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.service</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.mvc;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-ivr-asterisk/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-ivr-asterisk' presentationname='MoTeCH IVR Asterisk' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-ivr-asterisk/0.11-SNAPSHOT/motech-ivr-asterisk-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>MoTeCH is a software system from Grameen Foundation that harnesses the ubiquity        of mobile phones to deliver and receive information from patient and caregivers.</description>
    <size>13017</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-ivr-asterisk'/>
      <p n='presentationname' v='MoTeCH IVR Asterisk'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.asterisk.callback'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.domain,org.motechproject.scheduler.context,org.asteriskjava.live,org.motechproject.ivr.model,org.motechproject.scheduler.event,org.motechproject.ivr.service'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.asterisk'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.springframework.osgi.web.context.support,javax.servlet,org.motechproject.server.event.annotations,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,org.springframework.beans.factory,org.motechproject.server.asterisk.callback,org.apache.commons.codec,org.apache.commons.codec.net,org.asteriskjava.live,org.motechproject.ivr.model,org.motechproject.ivr.service'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.codec)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.codec;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.codec.net)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.codec.net;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='false'>Import package org.apache.log4j</require>
    <require name='package' filter='(&amp;(package=org.asteriskjava)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.asteriskjava;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.asteriskjava.live)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.asteriskjava.live;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.service</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.mvc;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-ivr-kookoo/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-ivr-kookoo' presentationname='MoTeCH IVR KooKoo' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-ivr-kookoo/0.11-SNAPSHOT/motech-ivr-kookoo-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>KooKoo IVR Provider</description>
    <size>54442</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-ivr-kookoo'/>
      <p n='presentationname' v='MoTeCH IVR KooKoo'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.ivr.kookoo'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.springframework.osgi.web.context.support,javax.servlet,org.motechproject.server.event.annotations,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,org.springframework.beans.factory,org.motechproject.ivr.model,javax.servlet.http,org.motechproject.ivr.domain,org.apache.commons.lang,org.springframework.beans.factory.annotation,org.json,org.motechproject.ivr.service,org.apache.commons.httpclient,org.apache.commons.httpclient.methods,org.motechproject.ivr.kookoo.service,org.springframework.stereotype,org.apache.log4j,org.motechproject.ivr.event'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.ivr.kookoo.domain'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.decisiontree.model,org.motechproject.ivr.kookoo,org.ektorp.support,org.joda.time,org.motechproject.model,org.motechproject.ivr.model,org.motechproject.util,org.motechproject.ivr.event,org.motechproject.ivr.message'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.ivr.kookoo.extensions'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.decisiontree.model,org.springframework.stereotype,org.motechproject.ivr.kookoo'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.ivr.kookoo.controller'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.beans.factory.annotation,org.motechproject.decisiontree.model,org.motechproject.ivr.kookoo.domain,org.motechproject.ivr.domain,org.apache.commons.lang,org.motechproject.ivr.service,org.motechproject.ivr.kookoo.extensions,org.springframework.web.bind.annotation,org.motechproject.ivr.kookoo.service,org.springframework.stereotype,org.motechproject.ivr.kookoo,org.motechproject.ivr.event,org.apache.log4j,org.motechproject.ivr.model,javax.servlet.http'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.ivr.kookoo.eventlogging'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.ivr.kookoo.repository'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.ektorp.support,org.ektorp,org.joda.time,org.springframework.beans.factory.annotation,org.motechproject.ivr.model,org.motechproject.dao,org.springframework.stereotype,org.slf4j,org.motechproject.ivr.kookoo.domain'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.ivr.kookoo.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.ivr.model,org.motechproject.ivr.kookoo.domain,org.motechproject.ivr.event,org.motechproject.scheduler.domain,org.springframework.beans.factory.annotation,org.motechproject.util,org.apache.commons.lang,org.motechproject.ivr.kookoo.repository,org.joda.time,org.motechproject.scheduler.context,org.springframework.stereotype,org.motechproject.scheduler.event'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='false'>Import package javax.xml.parsers</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.dom))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform.dom</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stream))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform.stream</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient.methods))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient.methods</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang;version="[2.6,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='false'>Import package org.apache.log4j</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.json))' extend='false' multiple='false' optional='false'>Import package org.json</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.decisiontree.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.decisiontree.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.message))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.message</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.service</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.motechproject.util))' extend='false' multiple='false' optional='false'>Import package org.motechproject.util</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.bind.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.mvc;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
  </resource>
  <resource id='org.motechproject.motech-ivr-kookoo/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-ivr-kookoo' presentationname='MoTeCH IVR KooKoo' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-ivr-kookoo/0.12-SNAPSHOT/motech-ivr-kookoo-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>KooKoo IVR Provider</description>
    <size>54899</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-ivr-kookoo'/>
      <p n='presentationname' v='MoTeCH IVR KooKoo'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.ivr.kookoo'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.springframework.osgi.web.context.support,javax.servlet,org.motechproject.server.event.annotations,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,org.springframework.beans.factory,org.motechproject.ivr.model,javax.servlet.http,org.motechproject.ivr.domain,org.apache.commons.lang,org.springframework.beans.factory.annotation,org.json,org.motechproject.ivr.service,org.apache.commons.httpclient,org.apache.commons.httpclient.methods,org.motechproject.ivr.kookoo.service,org.springframework.stereotype,org.apache.log4j,org.motechproject.ivr.event'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.ivr.kookoo.domain'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.decisiontree.model,org.motechproject.ivr.kookoo,org.ektorp.support,org.joda.time,org.motechproject.model,org.motechproject.ivr.model,org.motechproject.util,org.motechproject.ivr.event,org.motechproject.ivr.message'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.ivr.kookoo.extensions'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.decisiontree.model,org.springframework.stereotype,org.motechproject.ivr.kookoo'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.ivr.kookoo.controller'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.beans.factory.annotation,org.motechproject.decisiontree.model,org.motechproject.ivr.kookoo.domain,org.motechproject.ivr.domain,org.motechproject.ivr.service,org.apache.commons.lang,org.motechproject.ivr.kookoo.extensions,org.springframework.web.bind.annotation,org.motechproject.ivr.kookoo.service,org.motechproject.server.decisiontree,org.springframework.stereotype,org.motechproject.ivr.kookoo,org.motechproject.ivr.event,org.apache.log4j,org.motechproject.ivr.model,javax.servlet.http'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.ivr.kookoo.eventlogging'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.ivr.kookoo.repository'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.ektorp.support,org.ektorp,org.joda.time,org.springframework.beans.factory.annotation,org.motechproject.ivr.model,org.motechproject.dao,org.springframework.stereotype,org.slf4j,org.motechproject.ivr.kookoo.domain'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.ivr.kookoo.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.ivr.model,org.motechproject.ivr.kookoo.domain,org.motechproject.ivr.event,org.motechproject.scheduler.domain,org.springframework.beans.factory.annotation,org.motechproject.util,org.apache.commons.lang,org.motechproject.ivr.kookoo.repository,org.joda.time,org.motechproject.scheduler.context,org.springframework.stereotype,org.motechproject.scheduler.event'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='false'>Import package javax.xml.parsers</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.dom))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform.dom</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stream))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform.stream</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient.methods))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient.methods</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang;version="[2.6,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='false'>Import package org.apache.log4j</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.json))' extend='false' multiple='false' optional='false'>Import package org.json</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.decisiontree.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.decisiontree.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.message))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.message</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.service</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.decisiontree))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.decisiontree</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.motechproject.util))' extend='false' multiple='false' optional='false'>Import package org.motechproject.util</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.bind.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.mvc;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
  </resource>
  <resource id='org.motechproject.motech-ivr-verboice/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-ivr-verboice' presentationname='MoTeCH IVR Verboice' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-ivr-verboice/0.12-SNAPSHOT/motech-ivr-verboice-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>IVR over Nuntium&apos;s Verboice</description>
    <size>22631</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-ivr-verboice'/>
      <p n='presentationname' v='MoTeCH IVR Verboice'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.verboice'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.springframework.osgi.web.context.support,javax.servlet,org.motechproject.server.event.annotations,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,org.springframework.beans.factory,org.apache.commons.httpclient.auth,org.springframework.beans.factory.annotation,org.apache.commons.httpclient,org.motechproject.ivr.service,org.apache.commons.httpclient.methods,org.motechproject.server.verboice.domain,org.apache.commons.httpclient.params,org.springframework.stereotype'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.verboice.domain'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.apache.commons.lang'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.verboice.web'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.server.verboice.domain,org.springframework.web.bind.annotation,org.springframework.beans.factory.annotation,org.springframework.stereotype,org.motechproject.server.verboice,javax.servlet.http,org.apache.commons.lang'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient.auth))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient.auth</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient.methods))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient.methods</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient.params))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient.params</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang;version="[2.6,3)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.service</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.bind.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.mvc;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-ivr-verboice/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-ivr-verboice' presentationname='MoTeCH IVR Verboice' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-ivr-verboice/0.11-SNAPSHOT/motech-ivr-verboice-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>IVR over Nuntium&apos;s Verboice</description>
    <size>22594</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-ivr-verboice'/>
      <p n='presentationname' v='MoTeCH IVR Verboice'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.verboice'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.springframework.osgi.web.context.support,javax.servlet,org.motechproject.server.event.annotations,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,org.springframework.beans.factory,org.apache.commons.httpclient.auth,org.springframework.beans.factory.annotation,org.apache.commons.httpclient,org.motechproject.ivr.service,org.apache.commons.httpclient.methods,org.motechproject.server.verboice.domain,org.apache.commons.httpclient.params,org.springframework.stereotype'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.verboice.domain'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.apache.commons.lang'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.verboice.web'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.server.verboice.domain,org.springframework.web.bind.annotation,org.springframework.beans.factory.annotation,org.springframework.stereotype,org.motechproject.server.verboice,javax.servlet.http,org.apache.commons.lang'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient.auth))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient.auth</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient.methods))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient.methods</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient.params))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient.params</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang;version="[2.6,3)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.service</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.bind.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.mvc;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-ivr-voxeo/0.10.0.SNAPSHOT' symbolicname='org.motechproject.motech-ivr-voxeo' presentationname='MoTeCH IVR Voxeo' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-ivr-voxeo/0.10-SNAPSHOT/motech-ivr-voxeo-0.10-SNAPSHOT.jar' version='0.10.0.SNAPSHOT'>
    <description>Voxeo IVR Provider</description>
    <size>29110</size>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-ivr-voxeo'/>
      <p n='presentationname' v='MoTeCH IVR Voxeo'/>
      <p n='version' t='version' v='0.10.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.voxeo'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.motechproject.server.event.annotations,org.motechproject.context,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,javax.servlet,org.motechproject.model,org.motechproject.event,org.springframework.beans.factory,org.motechproject.server.voxeo.config,org.springframework.beans.factory.annotation,org.motechproject.server.voxeo.domain,org.apache.commons.httpclient,org.motechproject.ivr.service,org.apache.commons.httpclient.methods,org.motechproject.server.voxeo.dao,org.motechproject.ivr.model,org.springframework.stereotype'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.voxeo.domain'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.ektorp.support,org.motechproject.model,org.codehaus.jackson.annotate,org.motechproject.ivr.model,org.motechproject.ivr.service'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.voxeo.config'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='com.google.gson.reflect,org.motechproject.dao,org.springframework.stereotype'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.voxeo.dao'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.ektorp,org.springframework.beans.factory.annotation,org.motechproject.server.voxeo.domain,org.motechproject.dao,org.springframework.stereotype'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.voxeo.web'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.web.servlet.mvc,org.springframework.web.servlet,org.slf4j,javax.servlet.http,org.motechproject.server.voxeo.domain,org.motechproject.context,org.ektorp,org.springframework.beans.factory.annotation,org.motechproject.ivr.service,org.motechproject.model,org.motechproject.event,org.springframework.web.bind.annotation,org.motechproject.server.voxeo.dao,org.motechproject.ivr.model,org.springframework.web.servlet.mvc.multiaction,org.springframework.stereotype'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.google.gson.reflect)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package com.google.gson.reflect;resolution:=optional;version="[1.7,2)"</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='true'>Import package javax.servlet;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='true'>Import package javax.servlet.http;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.httpclient;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient.methods))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.httpclient.methods;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.codehaus.jackson.annotate;resolution:=optional;version="[1.7,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='true'>Import package org.ektorp;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='true'>Import package org.ektorp.impl;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='true'>Import package org.ektorp.spring;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='true'>Import package org.ektorp.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.context))' extend='false' multiple='false' optional='true'>Import package org.motechproject.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='true'>Import package org.motechproject.dao;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.event))' extend='false' multiple='false' optional='true'>Import package org.motechproject.event;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.model))' extend='false' multiple='false' optional='true'>Import package org.motechproject.ivr.model;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.service))' extend='false' multiple='false' optional='true'>Import package org.motechproject.ivr.service;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='true'>Import package org.motechproject.model;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='true'>Import package org.motechproject.server.event.annotations;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.framework;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.http;resolution:=optional;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.util.tracker;resolution:=optional;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.slf4j;resolution:=optional;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory.annotation;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.stereotype;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.web.bind.annotation;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.web.context;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.web.servlet;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.web.servlet.mvc;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc.multiaction)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.web.servlet.mvc.multiaction;resolution:=optional;version="[3.0,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-ivr-voxeo/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-ivr-voxeo' presentationname='MoTeCH IVR Voxeo' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-ivr-voxeo/0.11-SNAPSHOT/motech-ivr-voxeo-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>Voxeo IVR Provider</description>
    <size>31232</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-ivr-voxeo'/>
      <p n='presentationname' v='MoTeCH IVR Voxeo'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.voxeo'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.springframework.osgi.web.context.support,org.motechproject.scheduler.domain,org.motechproject.server.event.annotations,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,javax.servlet,org.motechproject.scheduler.context,org.springframework.beans.factory,org.motechproject.scheduler.event,org.motechproject.server.voxeo.config,org.springframework.beans.factory.annotation,org.motechproject.server.voxeo.domain,org.apache.commons.httpclient,org.motechproject.ivr.service,org.apache.commons.httpclient.methods,org.motechproject.server.voxeo.dao,org.motechproject.ivr.model,org.springframework.stereotype'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.voxeo.domain'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.ektorp.support,org.motechproject.model,org.codehaus.jackson.annotate,org.motechproject.ivr.model,org.motechproject.ivr.service'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.voxeo.config'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='com.google.gson.reflect,org.motechproject,org.motechproject.dao,org.springframework.stereotype'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.voxeo.dao'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.ektorp,org.springframework.beans.factory.annotation,org.motechproject.server.voxeo.domain,org.motechproject.dao,org.springframework.stereotype'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.voxeo.web'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.web.servlet,org.springframework.web.bind.annotation,org.springframework.stereotype,org.slf4j,javax.servlet.http,org.motechproject.server.voxeo.domain,org.motechproject.scheduler.domain,org.ektorp,org.springframework.beans.factory.annotation,org.motechproject.ivr.service,org.motechproject.scheduler.context,org.motechproject.server.voxeo.dao,org.motechproject.ivr.model,org.springframework.web.servlet.mvc.multiaction,org.motechproject.scheduler.event'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.google.gson.reflect)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package com.google.gson.reflect;version="[1.7,2)"</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient.methods))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient.methods</require>
    <require name='package' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.codehaus.jackson.annotate;version="[1.9,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.motechproject))' extend='false' multiple='false' optional='false'>Import package org.motechproject</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.service</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.bind.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.mvc;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc.multiaction)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.mvc.multiaction;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.support;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-ivr-voxeo/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-ivr-voxeo' presentationname='MoTeCH IVR Voxeo' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-ivr-voxeo/0.12-SNAPSHOT/motech-ivr-voxeo-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>Voxeo IVR Provider</description>
    <size>31271</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-ivr-voxeo'/>
      <p n='presentationname' v='MoTeCH IVR Voxeo'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.voxeo'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.springframework.osgi.web.context.support,org.motechproject.scheduler.domain,org.motechproject.server.event.annotations,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,javax.servlet,org.motechproject.scheduler.context,org.springframework.beans.factory,org.motechproject.scheduler.event,org.motechproject.server.voxeo.config,org.springframework.beans.factory.annotation,org.motechproject.server.voxeo.domain,org.apache.commons.httpclient,org.motechproject.ivr.service,org.apache.commons.httpclient.methods,org.motechproject.server.voxeo.dao,org.motechproject.ivr.model,org.springframework.stereotype'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.voxeo.domain'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.ektorp.support,org.motechproject.model,org.codehaus.jackson.annotate,org.motechproject.ivr.model,org.motechproject.ivr.service'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.voxeo.config'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='com.google.gson.reflect,org.motechproject,org.motechproject.dao,org.springframework.stereotype'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.voxeo.dao'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.ektorp,org.springframework.beans.factory.annotation,org.motechproject.server.voxeo.domain,org.motechproject.dao,org.springframework.stereotype'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.voxeo.web'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.web.servlet,org.springframework.web.bind.annotation,org.springframework.stereotype,org.slf4j,javax.servlet.http,org.motechproject.server.voxeo.domain,org.motechproject.scheduler.domain,org.ektorp,org.springframework.beans.factory.annotation,org.motechproject.ivr.service,org.motechproject.scheduler.context,org.motechproject.server.voxeo.dao,org.motechproject.ivr.model,org.springframework.web.servlet.mvc.multiaction,org.motechproject.scheduler.event'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.google.gson.reflect)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package com.google.gson.reflect;version="[1.7,2)"</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient.methods))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient.methods</require>
    <require name='package' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.codehaus.jackson.annotate;version="[1.9,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.motechproject))' extend='false' multiple='false' optional='false'>Import package org.motechproject</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.service</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.bind.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.mvc;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc.multiaction)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.mvc.multiaction;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.support;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-message-campaign/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-message-campaign' presentationname='MoTeCH Message Campaign' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-message-campaign/0.12-SNAPSHOT/motech-message-campaign-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>Motech Message Campaign</description>
    <size>80466</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-message-campaign'/>
      <p n='presentationname' v='MoTeCH Message Campaign'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.messagecampaign'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.springframework.osgi.web.context.support,javax.servlet,org.motechproject.server.event.annotations,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,org.springframework.beans.factory,org.motechproject.scheduler.gateway,org.motechproject.scheduler.domain,org.springframework.beans.factory.annotation,org.springframework.stereotype'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.messagecampaign.contract'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.joda.time,org.motechproject.model'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.server.messagecampaign.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.joda.time,org.springframework.stereotype,org.springframework.beans.factory.annotation,org.motechproject.server.messagecampaign.contract,org.motechproject.scheduler,org.motechproject.model'/>
    </capability>
    <require name='package' filter='(&amp;(package=ch.lambdaj))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj</require>
    <require name='package' filter='(&amp;(package=ch.lambdaj.function.matcher))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj.function.matcher</require>
    <require name='package' filter='(&amp;(package=com.google.gson.reflect)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package com.google.gson.reflect;version="[1.7,2)"</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang;version="[2.6,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='false'>Import package org.apache.log4j</require>
    <require name='package' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.codehaus.jackson.annotate;version="[1.9,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.hamcrest))' extend='false' multiple='false' optional='false'>Import package org.hamcrest</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.gateway))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.gateway</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.messagecampaign.contract))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.messagecampaign.contract</require>
    <require name='package' filter='(&amp;(package=org.motechproject.util))' extend='false' multiple='false' optional='false'>Import package org.motechproject.util</require>
    <require name='package' filter='(&amp;(package=org.motechproject.valueobjects))' extend='false' multiple='false' optional='false'>Import package org.motechproject.valueobjects</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.util;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-mobileforms-api/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-mobileforms-api' presentationname='MoTeCH Mobile Forms API' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-mobileforms-api/0.11-SNAPSHOT/motech-mobileforms-api-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>Motech Mobile Forms API</description>
    <size>110937</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-mobileforms-api'/>
      <p n='presentationname' v='MoTeCH Mobile Forms API'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.callbacks'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.domain,org.motechproject.mobileforms.api.domain,org.motechproject.scheduler.context,org.springframework.stereotype,org.slf4j,org.motechproject.scheduler.event,org.motechproject.mobileforms.api.repository,org.motechproject,org.motechproject.mobileforms.api.parser,org.fcitmuk.epihandy,org.motechproject.mobileforms.api.utils,org.motechproject.mobileforms.api.vo,org.apache.commons.lang'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.domain'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.util,org.motechproject,ch.lambdaj.function.matcher,ch.lambdaj,org.hamcrest,org.motechproject.mobileforms.api.validator,org.slf4j,ch.lambdaj.function.convert,org.motechproject.mobileforms.api.vo'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.parser'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.jdom.input,org.jdom,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.repository'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='com.google.gson.reflect,org.motechproject.mobileforms.api.domain,ch.lambdaj.function.convert,org.motechproject.mobileforms.api.utils,ch.lambdaj,javax.annotation,org.springframework.beans.factory.annotation,org.motechproject.dao,org.springframework.stereotype'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.mobileforms.api.domain,org.motechproject.mobileforms.api.repository,org.springframework.beans.factory.annotation,ch.lambdaj,org.springframework.stereotype,org.motechproject.mobileforms.api.utils'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.utils'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.apache.commons.codec.digest,org.springframework.stereotype,org.motechproject,org.apache.commons.io,ch.lambdaj,org.apache.commons.beanutils,org.joda.time,org.motechproject.model,org.apache.commons.beanutils.converters,org.motechproject.mobileforms.api.domain'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.validator'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.mobileforms.api.domain,org.apache.commons.beanutils,org.apache.log4j,org.motechproject,org.motechproject.mobileforms.api.utils,org.apache.commons.lang'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.vo'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.mobileforms.api.domain,ch.lambdaj.function.convert,ch.lambdaj.group,ch.lambdaj.function.matcher,ch.lambdaj,org.hamcrest'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.web'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.mobileforms.api.repository,org.motechproject.mobileforms.api.validator,org.springframework.context.support,org.fcitmuk.epihandy,org.springframework.context,org.motechproject.mobileforms.api.utils,org.motechproject.mobileforms.api.callbacks,org.motechproject.mobileforms.api.service,javax.servlet,org.motechproject.mobileforms.api.domain,org.motechproject.mobileforms.api.parser,javax.servlet.http,com.jcraft.jzlib,ch.lambdaj,org.slf4j,org.motechproject.mobileforms.api.vo'/>
    </capability>
    <require name='package' filter='(&amp;(package=ch.lambdaj))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj</require>
    <require name='package' filter='(&amp;(package=ch.lambdaj.function.convert))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj.function.convert</require>
    <require name='package' filter='(&amp;(package=ch.lambdaj.function.matcher))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj.function.matcher</require>
    <require name='package' filter='(&amp;(package=ch.lambdaj.group))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj.group</require>
    <require name='package' filter='(&amp;(package=com.google.gson.reflect)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package com.google.gson.reflect;version="[1.7,2)"</require>
    <require name='package' filter='(&amp;(package=com.jcraft.jzlib))' extend='false' multiple='false' optional='false'>Import package com.jcraft.jzlib</require>
    <require name='package' filter='(&amp;(package=javax.annotation))' extend='false' multiple='false' optional='false'>Import package javax.annotation</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.beanutils)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.beanutils;version="[1.8,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.beanutils.converters)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.beanutils.converters;version="[1.8,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.codec.digest)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.codec.digest;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.io)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.io;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang;version="[2.6,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.logging;version="[1.1,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='false'>Import package org.apache.log4j</require>
    <require name='package' filter='(&amp;(package=org.aspectj.internal.lang.annotation))' extend='false' multiple='false' optional='false'>Import package org.aspectj.internal.lang.annotation</require>
    <require name='package' filter='(&amp;(package=org.aspectj.lang))' extend='false' multiple='false' optional='false'>Import package org.aspectj.lang</require>
    <require name='package' filter='(&amp;(package=org.aspectj.lang.annotation))' extend='false' multiple='false' optional='false'>Import package org.aspectj.lang.annotation</require>
    <require name='package' filter='(&amp;(package=org.aspectj.lang.reflect))' extend='false' multiple='false' optional='false'>Import package org.aspectj.lang.reflect</require>
    <require name='package' filter='(&amp;(package=org.aspectj.runtime.internal))' extend='false' multiple='false' optional='false'>Import package org.aspectj.runtime.internal</require>
    <require name='package' filter='(&amp;(package=org.fcitmuk.epihandy))' extend='false' multiple='false' optional='false'>Import package org.fcitmuk.epihandy</require>
    <require name='package' filter='(&amp;(package=org.hamcrest))' extend='false' multiple='false' optional='false'>Import package org.hamcrest</require>
    <require name='package' filter='(&amp;(package=org.jdom))' extend='false' multiple='false' optional='false'>Import package org.jdom</require>
    <require name='package' filter='(&amp;(package=org.jdom.input))' extend='false' multiple='false' optional='false'>Import package org.jdom.input</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject))' extend='false' multiple='false' optional='false'>Import package org.motechproject</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.wiring)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.wiring;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.cache)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.cache;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.cache.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.cache.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.cache.interceptor)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.cache.interceptor;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.core.task)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.core.task;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.core.task.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.core.task.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.dao)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.dao;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.orm.jpa))' extend='false' multiple='false' optional='false'>Import package org.springframework.orm.jpa</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.scheduling.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.scheduling.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.transaction)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.transaction;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.transaction.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.transaction.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.transaction.interceptor)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.transaction.interceptor;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.util;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-mobileforms-api/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-mobileforms-api' presentationname='MoTeCH Mobile Forms API' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-mobileforms-api/0.12-SNAPSHOT/motech-mobileforms-api-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>Motech Mobile Forms API</description>
    <size>110975</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-mobileforms-api'/>
      <p n='presentationname' v='MoTeCH Mobile Forms API'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.callbacks'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.domain,org.motechproject.mobileforms.api.domain,org.motechproject.scheduler.context,org.springframework.stereotype,org.slf4j,org.motechproject.scheduler.event,org.motechproject.mobileforms.api.repository,org.motechproject,org.motechproject.mobileforms.api.parser,org.fcitmuk.epihandy,org.motechproject.mobileforms.api.utils,org.motechproject.mobileforms.api.vo,org.apache.commons.lang'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.domain'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.util,org.motechproject,ch.lambdaj.function.matcher,ch.lambdaj,org.hamcrest,org.motechproject.mobileforms.api.validator,org.slf4j,ch.lambdaj.function.convert,org.motechproject.mobileforms.api.vo'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.parser'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.jdom.input,org.jdom,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.repository'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='com.google.gson.reflect,org.motechproject.mobileforms.api.domain,ch.lambdaj.function.convert,org.motechproject.mobileforms.api.utils,ch.lambdaj,javax.annotation,org.springframework.beans.factory.annotation,org.motechproject.dao,org.springframework.stereotype'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.mobileforms.api.domain,org.motechproject.mobileforms.api.repository,org.springframework.beans.factory.annotation,ch.lambdaj,org.springframework.stereotype,org.motechproject.mobileforms.api.utils'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.utils'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.apache.commons.codec.digest,org.springframework.stereotype,org.motechproject,org.apache.commons.io,ch.lambdaj,org.apache.commons.beanutils,org.joda.time,org.motechproject.model,org.apache.commons.beanutils.converters,org.motechproject.mobileforms.api.domain'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.validator'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.mobileforms.api.domain,org.apache.commons.beanutils,org.apache.log4j,org.motechproject,org.motechproject.mobileforms.api.utils,org.apache.commons.lang'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.vo'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.mobileforms.api.domain,ch.lambdaj.function.convert,ch.lambdaj.group,ch.lambdaj.function.matcher,ch.lambdaj,org.hamcrest'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mobileforms.api.web'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.mobileforms.api.repository,org.motechproject.mobileforms.api.validator,org.springframework.context.support,org.fcitmuk.epihandy,org.springframework.context,org.motechproject.mobileforms.api.utils,org.motechproject.mobileforms.api.callbacks,org.motechproject.mobileforms.api.service,javax.servlet,org.motechproject.mobileforms.api.domain,org.motechproject.mobileforms.api.parser,javax.servlet.http,com.jcraft.jzlib,ch.lambdaj,org.slf4j,org.motechproject.mobileforms.api.vo'/>
    </capability>
    <require name='package' filter='(&amp;(package=ch.lambdaj))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj</require>
    <require name='package' filter='(&amp;(package=ch.lambdaj.function.convert))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj.function.convert</require>
    <require name='package' filter='(&amp;(package=ch.lambdaj.function.matcher))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj.function.matcher</require>
    <require name='package' filter='(&amp;(package=ch.lambdaj.group))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj.group</require>
    <require name='package' filter='(&amp;(package=com.google.gson.reflect)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package com.google.gson.reflect;version="[1.7,2)"</require>
    <require name='package' filter='(&amp;(package=com.jcraft.jzlib))' extend='false' multiple='false' optional='false'>Import package com.jcraft.jzlib</require>
    <require name='package' filter='(&amp;(package=javax.annotation))' extend='false' multiple='false' optional='false'>Import package javax.annotation</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.beanutils)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.beanutils;version="[1.8,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.beanutils.converters)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.beanutils.converters;version="[1.8,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.codec.digest)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.codec.digest;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.io)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.io;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang;version="[2.6,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.logging;version="[1.1,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='false'>Import package org.apache.log4j</require>
    <require name='package' filter='(&amp;(package=org.aspectj.internal.lang.annotation))' extend='false' multiple='false' optional='false'>Import package org.aspectj.internal.lang.annotation</require>
    <require name='package' filter='(&amp;(package=org.aspectj.lang))' extend='false' multiple='false' optional='false'>Import package org.aspectj.lang</require>
    <require name='package' filter='(&amp;(package=org.aspectj.lang.annotation))' extend='false' multiple='false' optional='false'>Import package org.aspectj.lang.annotation</require>
    <require name='package' filter='(&amp;(package=org.aspectj.lang.reflect))' extend='false' multiple='false' optional='false'>Import package org.aspectj.lang.reflect</require>
    <require name='package' filter='(&amp;(package=org.aspectj.runtime.internal))' extend='false' multiple='false' optional='false'>Import package org.aspectj.runtime.internal</require>
    <require name='package' filter='(&amp;(package=org.fcitmuk.epihandy))' extend='false' multiple='false' optional='false'>Import package org.fcitmuk.epihandy</require>
    <require name='package' filter='(&amp;(package=org.hamcrest))' extend='false' multiple='false' optional='false'>Import package org.hamcrest</require>
    <require name='package' filter='(&amp;(package=org.jdom))' extend='false' multiple='false' optional='false'>Import package org.jdom</require>
    <require name='package' filter='(&amp;(package=org.jdom.input))' extend='false' multiple='false' optional='false'>Import package org.jdom.input</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject))' extend='false' multiple='false' optional='false'>Import package org.motechproject</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.wiring)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.wiring;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.cache)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.cache;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.cache.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.cache.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.cache.interceptor)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.cache.interceptor;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.core.task)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.core.task;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.core.task.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.core.task.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.dao)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.dao;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.orm.jpa))' extend='false' multiple='false' optional='false'>Import package org.springframework.orm.jpa</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.scheduling.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.scheduling.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.transaction)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.transaction;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.transaction.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.transaction.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.transaction.interceptor)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.transaction.interceptor;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.util;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-mrs-api/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-mrs-api' presentationname='MoTeCH MRS API' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-mrs-api/0.11-SNAPSHOT/motech-mrs-api-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>Motech interface to MRS</description>
    <size>24654</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-mrs-api'/>
      <p n='presentationname' v='MoTeCH MRS API'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mrs.exception'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.security.authentication'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mrs.model'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='ch.lambdaj.function.matcher,ch.lambdaj,org.hamcrest,org.apache.commons.collections'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mrs.security'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.security.authentication.dao,org.springframework.security.core.userdetails,org.springframework.security.authentication,org.springframework.security.core'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mrs.services'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.mrs.model,org.motechproject.mrs.exception,org.springframework.security.core.userdetails'/>
    </capability>
    <require name='package' filter='(&amp;(package=ch.lambdaj))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj</require>
    <require name='package' filter='(&amp;(package=ch.lambdaj.function.matcher))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj.function.matcher</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.collections))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.collections</require>
    <require name='package' filter='(&amp;(package=org.hamcrest))' extend='false' multiple='false' optional='false'>Import package org.hamcrest</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.security.authentication)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.security.authentication;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.security.authentication.dao)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.security.authentication.dao;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.security.core)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.security.core;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.security.core.userdetails)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.security.core.userdetails;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-mrs-api/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-mrs-api' presentationname='MoTeCH MRS API' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-mrs-api/0.12-SNAPSHOT/motech-mrs-api-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>Motech interface to MRS</description>
    <size>24694</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-mrs-api'/>
      <p n='presentationname' v='MoTeCH MRS API'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mrs.exception'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.security.authentication'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mrs.model'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='ch.lambdaj.function.matcher,ch.lambdaj,org.hamcrest,org.apache.commons.collections'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mrs.security'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.security.authentication.dao,org.springframework.security.core.userdetails,org.springframework.security.authentication,org.springframework.security.core'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.mrs.services'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.mrs.model,org.motechproject.mrs.exception,org.springframework.security.core.userdetails'/>
    </capability>
    <require name='package' filter='(&amp;(package=ch.lambdaj))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj</require>
    <require name='package' filter='(&amp;(package=ch.lambdaj.function.matcher))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj.function.matcher</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.collections))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.collections</require>
    <require name='package' filter='(&amp;(package=org.hamcrest))' extend='false' multiple='false' optional='false'>Import package org.hamcrest</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.security.authentication)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.security.authentication;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.security.authentication.dao)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.security.authentication.dao;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.security.core)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.security.core;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.security.core.userdetails)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.security.core.userdetails;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-outbox/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-outbox' presentationname='MoTeCH Outbox' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-outbox/0.12-SNAPSHOT/motech-outbox-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>MoTeCH is a software system from Grameen Foundation that harnesses the ubiquity        of mobile phones to deliver and receive information from patient and caregivers.</description>
    <size>38207</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-outbox'/>
      <p n='presentationname' v='MoTeCH Outbox'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.outbox.api'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.domain,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.outbox.api.context'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.beans.factory.annotation'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang;version="[2.4,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang.builder)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang.builder;version="[2.4,3)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject))' extend='false' multiple='false' optional='false'>Import package org.motechproject</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.service</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.outbox.api))' extend='false' multiple='false' optional='false'>Import package org.motechproject.outbox.api</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.gateway))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.gateway</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.motechproject.util))' extend='false' multiple='false' optional='false'>Import package org.motechproject.util</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.util;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.bind.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc.multiaction)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.mvc.multiaction;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-outbox/0.10.0.SNAPSHOT' symbolicname='org.motechproject.motech-outbox' presentationname='MoTeCH Outbox' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-outbox/0.10-SNAPSHOT/motech-outbox-0.10-SNAPSHOT.jar' version='0.10.0.SNAPSHOT'>
    <size>21097</size>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-outbox'/>
      <p n='presentationname' v='MoTeCH Outbox'/>
      <p n='version' t='version' v='0.10.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.outbox.api'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.model,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.outbox.api.context'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.outbox.api.service,org.springframework.beans.factory.annotation'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='true'>Import package javax.servlet;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='true'>Import package javax.servlet.http;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.lang;resolution:=optional;version="[2.4,3)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='true'>Import package org.ektorp;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='true'>Import package org.ektorp.impl;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='true'>Import package org.ektorp.spring;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.context))' extend='false' multiple='false' optional='true'>Import package org.motechproject.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.gateway))' extend='false' multiple='false' optional='true'>Import package org.motechproject.gateway;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.model))' extend='false' multiple='false' optional='true'>Import package org.motechproject.ivr.model;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.service))' extend='false' multiple='false' optional='true'>Import package org.motechproject.ivr.service;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='true'>Import package org.motechproject.model;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.outbox.api))' extend='false' multiple='false' optional='true'>Import package org.motechproject.outbox.api;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.outbox.api.domain))' extend='false' multiple='false' optional='true'>Import package org.motechproject.outbox.api.domain;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.outbox.api.service))' extend='false' multiple='false' optional='true'>Import package org.motechproject.outbox.api.service;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='true'>Import package org.motechproject.server.event.annotations;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.framework;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.http;resolution:=optional;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.util.tracker;resolution:=optional;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.slf4j;resolution:=optional;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory.annotation;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.web.context;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.web.servlet;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc.multiaction)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.web.servlet.mvc.multiaction;resolution:=optional;version="[3.0,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-outbox/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-outbox' presentationname='MoTeCH Outbox' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-outbox/0.11-SNAPSHOT/motech-outbox-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>MoTeCH is a software system from Grameen Foundation that harnesses the ubiquity        of mobile phones to deliver and receive information from patient and caregivers.</description>
    <size>38177</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-outbox'/>
      <p n='presentationname' v='MoTeCH Outbox'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.outbox.api'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.domain,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.outbox.api.context'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.beans.factory.annotation'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang;version="[2.4,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang.builder)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang.builder;version="[2.4,3)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject))' extend='false' multiple='false' optional='false'>Import package org.motechproject</require>
    <require name='package' filter='(&amp;(package=org.motechproject.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.ivr.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.ivr.service</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.outbox.api))' extend='false' multiple='false' optional='false'>Import package org.motechproject.outbox.api</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.gateway))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.gateway</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.motechproject.util))' extend='false' multiple='false' optional='false'>Import package org.motechproject.util</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.util;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.bind.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc.multiaction)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.mvc.multiaction;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-pillreminder/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-pillreminder' presentationname='MoTeCH Pill Reminder' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-pillreminder/0.12-SNAPSHOT/motech-pillreminder-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>Motech Pill Reminder</description>
    <size>8316</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-pillreminder'/>
      <p n='presentationname' v='MoTeCH Pill Reminder'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-pillreminder/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-pillreminder' presentationname='MoTeCH Pill Reminder' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-pillreminder/0.11-SNAPSHOT/motech-pillreminder-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>Motech Pill Reminder</description>
    <size>8276</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-pillreminder'/>
      <p n='presentationname' v='MoTeCH Pill Reminder'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-pillreminder/0.10.0.SNAPSHOT' symbolicname='org.motechproject.motech-pillreminder' presentationname='MoTeCH Pill Reminder' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-pillreminder/0.10-SNAPSHOT/motech-pillreminder-0.10-SNAPSHOT.jar' version='0.10.0.SNAPSHOT'>
    <description>Motech Pill Reminder</description>
    <size>37410</size>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-pillreminder'/>
      <p n='presentationname' v='MoTeCH Pill Reminder'/>
      <p n='version' t='version' v='0.10.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='true'>Import package javax.servlet;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.codehaus.jackson.annotate;resolution:=optional;version="[1.7,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='true'>Import package org.ektorp;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='true'>Import package org.ektorp.impl;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='true'>Import package org.ektorp.spring;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='true'>Import package org.ektorp.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='true'>Import package org.joda.time;resolution:=optional;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject))' extend='false' multiple='false' optional='true'>Import package org.motechproject;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.context))' extend='false' multiple='false' optional='true'>Import package org.motechproject.context;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='true'>Import package org.motechproject.dao;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.gateway))' extend='false' multiple='false' optional='true'>Import package org.motechproject.gateway;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='true'>Import package org.motechproject.model;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler))' extend='false' multiple='false' optional='true'>Import package org.motechproject.scheduler;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.builder))' extend='false' multiple='false' optional='true'>Import package org.motechproject.scheduler.builder;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='true'>Import package org.motechproject.server.event.annotations;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.motechproject.util))' extend='false' multiple='false' optional='true'>Import package org.motechproject.util;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.framework;resolution:=optional;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.http;resolution:=optional;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.util.tracker;resolution:=optional;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.slf4j;resolution:=optional;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory.annotation;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.stereotype;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.web.context;resolution:=optional;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.web.servlet;resolution:=optional;version="[3.0,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-platform-common/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-platform-common' presentationname='MoTeCH Platform Common' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-platform-common/0.12-SNAPSHOT/motech-platform-common-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>MoTeCH is a software system from Grameen Foundation that harnesses the ubiquity        of mobile phones to deliver and receive information from patient and caregivers.</description>
    <size>11697</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-platform-common'/>
      <p n='presentationname' v='MoTeCH Platform Common'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.event'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.gateway,org.motechproject.scheduler.domain,org.springframework.beans.factory.annotation,org.slf4j,org.motechproject.scheduler.event'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.gateway'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.gateway,org.motechproject.scheduler.domain'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.aopalliance.aop)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.aopalliance.aop;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.activemq)(version&gt;=5.4.0)(!(version&gt;=6.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.activemq;version="[5.4,6)"</require>
    <require name='package' filter='(&amp;(package=org.apache.activemq.command)(version&gt;=5.4.0)(!(version&gt;=6.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.activemq.command;version="[5.4,6)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.gateway))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.gateway</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.aop;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop.framework)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.aop.framework;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.aop.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.channel)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.channel;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.config)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.config;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.config.xml)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.config.xml;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.core)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.core;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.endpoint)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.endpoint;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.gateway)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.gateway;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.handler)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.handler;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.jms)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.jms;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.jms.config)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.jms.config;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.jms.connection)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.jms.connection;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.scheduling.concurrent)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.scheduling.concurrent;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-platform-common/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-platform-common' presentationname='MoTeCH Platform Common' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-platform-common/0.11-SNAPSHOT/motech-platform-common-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>MoTeCH is a software system from Grameen Foundation that harnesses the ubiquity        of mobile phones to deliver and receive information from patient and caregivers.</description>
    <size>11661</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-platform-common'/>
      <p n='presentationname' v='MoTeCH Platform Common'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.event'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.gateway,org.motechproject.scheduler.domain,org.springframework.beans.factory.annotation,org.slf4j,org.motechproject.scheduler.event'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.gateway'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.gateway,org.motechproject.scheduler.domain'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.aopalliance.aop)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.aopalliance.aop;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.activemq)(version&gt;=5.4.0)(!(version&gt;=6.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.activemq;version="[5.4,6)"</require>
    <require name='package' filter='(&amp;(package=org.apache.activemq.command)(version&gt;=5.4.0)(!(version&gt;=6.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.activemq.command;version="[5.4,6)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.gateway))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.gateway</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.aop;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop.framework)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.aop.framework;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.aop.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.channel)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.channel;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.config)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.config;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.config.xml)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.config.xml;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.core)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.core;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.endpoint)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.endpoint;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.gateway)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.gateway;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.handler)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.handler;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.jms)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.jms;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.jms.config)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.jms.config;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.jms.connection)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.jms.connection;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.scheduling.concurrent)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.scheduling.concurrent;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-platform-decisiontree/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-platform-decisiontree' presentationname='MoTeCH Platform Decision Tree' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-platform-decisiontree/0.12-SNAPSHOT/motech-platform-decisiontree-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>MoTeCH Platform Decision Tree</description>
    <size>36795</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-platform-decisiontree'/>
      <p n='presentationname' v='MoTeCH Platform Decision Tree'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.decisiontree.model'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.codehaus.jackson.annotate,org.apache.commons.lang,org.ektorp.support,org.motechproject.model'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.decisiontree.repository'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.ektorp.support,org.motechproject.model,org.ektorp,org.springframework.beans.factory.annotation,org.motechproject.decisiontree.model,org.motechproject.dao,org.springframework.stereotype'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.codec.binary)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.codec.binary;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang;version="[2.4,3)"</require>
    <require name='package' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.codehaus.jackson.annotate;version="[1.9,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.decisiontree.repository))' extend='false' multiple='false' optional='false'>Import package org.motechproject.decisiontree.repository</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.util;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.bind.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc.multiaction)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.mvc.multiaction;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-platform-decisiontree/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-platform-decisiontree' presentationname='MoTeCH Platform Decision Tree' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-platform-decisiontree/0.11-SNAPSHOT/motech-platform-decisiontree-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>MoTeCH Platform Decision Tree</description>
    <size>36898</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-platform-decisiontree'/>
      <p n='presentationname' v='MoTeCH Platform Decision Tree'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.decisiontree.model'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.codehaus.jackson.annotate,org.apache.commons.lang,org.ektorp.support,org.motechproject.model'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.decisiontree.repository'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.ektorp.support,org.motechproject.model,org.ektorp,org.springframework.beans.factory.annotation,org.motechproject.decisiontree.model,org.motechproject.dao,org.springframework.stereotype'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.codec.binary)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.codec.binary;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.4.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang;version="[2.4,3)"</require>
    <require name='package' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.codehaus.jackson.annotate;version="[1.9,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.motechproject.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.decisiontree.repository))' extend='false' multiple='false' optional='false'>Import package org.motechproject.decisiontree.repository</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.util;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.bind.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet.mvc.multiaction)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet.mvc.multiaction;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-rules/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-rules' presentationname='MoTeCH Rules' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-rules/0.12-SNAPSHOT/motech-rules-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>MoTeCH is a software system from Grameen Foundation that harnesses the ubiquity        of mobile phones to deliver and receive information from patient and caregivers.</description>
    <size>141384</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-rules'/>
      <p n='presentationname' v='MoTeCH Rules'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.rules'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.springframework.osgi.web.context.support,javax.servlet,org.motechproject.server.event.annotations,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,org.springframework.beans.factory,org.motechproject.server.osgi,org.springframework.beans.factory.annotation,org.apache.commons.io,org.motechproject.rules.service'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.rules.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.beans.factory.annotation,org.slf4j,org.apache.commons.io'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.thoughtworks.xstream))' extend='false' multiple='false' optional='false'>Import package com.thoughtworks.xstream</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.xml.bind))' extend='false' multiple='false' optional='false'>Import package javax.xml.bind</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.io)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.io;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.osgi))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.osgi</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.quartz))' extend='false' multiple='false' optional='false'>Import package org.quartz</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-scheduletracking-api/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-scheduletracking-api' presentationname='MoTeCH Schedule Tracking API' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-scheduletracking-api/0.12-SNAPSHOT/motech-scheduletracking-api-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>Motech Schedule Tracking API</description>
    <size>84033</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-scheduletracking-api'/>
      <p n='presentationname' v='MoTeCH Schedule Tracking API'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.scheduletracking.api.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.joda.time,org.motechproject.model,org.motechproject.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.scheduletracking.api.service.impl'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.domain,org.motechproject.server.event.annotations,org.springframework.beans.factory.annotation,org.springframework.stereotype,org.motechproject.model,org.joda.time,org.motechproject.scheduletracking.api.service,org.motechproject.scheduler,org.motechproject.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.scheduletracking.api.events.constants'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require name='package' filter='(&amp;(package=ch.lambdaj))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj</require>
    <require name='package' filter='(&amp;(package=ch.lambdaj.function.matcher))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj.function.matcher</require>
    <require name='package' filter='(&amp;(package=com.google.gson.reflect)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package com.google.gson.reflect;version="[1.7,2)"</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.codehaus.jackson.annotate;version="[1.9,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.hamcrest))' extend='false' multiple='false' optional='false'>Import package org.hamcrest</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.motechproject.util))' extend='false' multiple='false' optional='false'>Import package org.motechproject.util</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.quartz.simpl))' extend='false' multiple='false' optional='false'>Import package org.quartz.simpl</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.scheduling.quartz)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.scheduling.quartz;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-scheduletracking-api/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-scheduletracking-api' presentationname='MoTeCH Schedule Tracking API' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-scheduletracking-api/0.11-SNAPSHOT/motech-scheduletracking-api-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>Motech Schedule Tracking API</description>
    <size>83999</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-scheduletracking-api'/>
      <p n='presentationname' v='MoTeCH Schedule Tracking API'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.scheduletracking.api.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.joda.time,org.motechproject.model,org.motechproject.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.scheduletracking.api.service.impl'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.domain,org.motechproject.server.event.annotations,org.springframework.beans.factory.annotation,org.springframework.stereotype,org.motechproject.model,org.joda.time,org.motechproject.scheduletracking.api.service,org.motechproject.scheduler,org.motechproject.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.scheduletracking.api.events.constants'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require name='package' filter='(&amp;(package=ch.lambdaj))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj</require>
    <require name='package' filter='(&amp;(package=ch.lambdaj.function.matcher))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj.function.matcher</require>
    <require name='package' filter='(&amp;(package=com.google.gson.reflect)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package com.google.gson.reflect;version="[1.7,2)"</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.codehaus.jackson.annotate;version="[1.9,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.hamcrest))' extend='false' multiple='false' optional='false'>Import package org.hamcrest</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.motechproject.util))' extend='false' multiple='false' optional='false'>Import package org.motechproject.util</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.quartz.simpl))' extend='false' multiple='false' optional='false'>Import package org.quartz.simpl</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.scheduling.quartz)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.scheduling.quartz;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-scheduler/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-scheduler' presentationname='MoTeCH Scheduler' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-scheduler/0.11-SNAPSHOT/motech-scheduler-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>MoTeCH is a software system from Grameen Foundation that harnesses the ubiquity        of mobile phones to deliver and receive information from patient and caregivers.</description>
    <size>23789</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-scheduler'/>
      <p n='presentationname' v='MoTeCH Scheduler'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.scheduler'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.gateway,org.motechproject.scheduler.domain,org.quartz,org.springframework.context,org.slf4j,org.springframework.beans.factory.annotation,org.springframework.context.support,org.motechproject.util,org.apache.commons.lang,org.motechproject.scheduler.exception,org.joda.time,org.motechproject,org.quartz.impl.matchers,org.springframework.scheduling.quartz'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.aopalliance.aop)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.aopalliance.aop;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.activemq)(version&gt;=5.4.0)(!(version&gt;=6.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.activemq;version="[5.4,6)"</require>
    <require name='package' filter='(&amp;(package=org.apache.activemq.command)(version&gt;=5.4.0)(!(version&gt;=6.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.activemq.command;version="[5.4,6)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang;version="[2.6,3)"</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject))' extend='false' multiple='false' optional='false'>Import package org.motechproject</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.exception))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.exception</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.gateway))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.gateway</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.motechproject.util))' extend='false' multiple='false' optional='false'>Import package org.motechproject.util</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.quartz))' extend='false' multiple='false' optional='false'>Import package org.quartz</require>
    <require name='package' filter='(&amp;(package=org.quartz.impl.matchers))' extend='false' multiple='false' optional='false'>Import package org.quartz.impl.matchers</require>
    <require name='package' filter='(&amp;(package=org.quartz.simpl))' extend='false' multiple='false' optional='false'>Import package org.quartz.simpl</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.aop;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop.framework)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.aop.framework;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.aop.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.channel)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.channel;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.config)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.config;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.config.xml)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.config.xml;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.endpoint)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.endpoint;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.gateway)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.gateway;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.handler)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.handler;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.jms)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.jms;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.jms.config)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.jms.config;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.jms.connection)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.jms.connection;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.jms.listener)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.jms.listener;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.scheduling.concurrent)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.scheduling.concurrent;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.scheduling.quartz)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.scheduling.quartz;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-scheduler/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-scheduler' presentationname='MoTeCH Scheduler' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-scheduler/0.12-SNAPSHOT/motech-scheduler-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>MoTeCH is a software system from Grameen Foundation that harnesses the ubiquity        of mobile phones to deliver and receive information from patient and caregivers.</description>
    <size>24791</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-scheduler'/>
      <p n='presentationname' v='MoTeCH Scheduler'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.scheduler'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.gateway,org.motechproject.scheduler.domain,org.quartz,org.springframework.context,org.slf4j,org.springframework.beans.factory.annotation,org.springframework.context.support,org.quartz.spi,org.motechproject.util,org.quartz.impl.calendar,org.apache.commons.lang,org.motechproject.scheduler.exception,org.joda.time,org.motechproject,org.springframework.scheduling.quartz,org.quartz.impl.matchers'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.aopalliance.aop)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.aopalliance.aop;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.apache.activemq)(version&gt;=5.4.0)(!(version&gt;=6.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.activemq;version="[5.4,6)"</require>
    <require name='package' filter='(&amp;(package=org.apache.activemq.command)(version&gt;=5.4.0)(!(version&gt;=6.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.activemq.command;version="[5.4,6)"</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang;version="[2.6,3)"</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject))' extend='false' multiple='false' optional='false'>Import package org.motechproject</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.exception))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.exception</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.gateway))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.gateway</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.motechproject.util))' extend='false' multiple='false' optional='false'>Import package org.motechproject.util</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.quartz))' extend='false' multiple='false' optional='false'>Import package org.quartz</require>
    <require name='package' filter='(&amp;(package=org.quartz.impl.calendar))' extend='false' multiple='false' optional='false'>Import package org.quartz.impl.calendar</require>
    <require name='package' filter='(&amp;(package=org.quartz.impl.matchers))' extend='false' multiple='false' optional='false'>Import package org.quartz.impl.matchers</require>
    <require name='package' filter='(&amp;(package=org.quartz.simpl))' extend='false' multiple='false' optional='false'>Import package org.quartz.simpl</require>
    <require name='package' filter='(&amp;(package=org.quartz.spi))' extend='false' multiple='false' optional='false'>Import package org.quartz.spi</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.aop;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop.framework)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.aop.framework;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.aop.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.aop.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.support)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.support;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.channel)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.channel;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.config)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.config;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.config.xml)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.config.xml;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.endpoint)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.endpoint;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.gateway)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.gateway;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.handler)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.handler;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.jms)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.jms;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.integration.jms.config)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.integration.jms.config;version="[2.1,3)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.jms.connection)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.jms.connection;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.jms.listener)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.jms.listener;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.scheduling.concurrent)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.scheduling.concurrent;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.scheduling.quartz)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.scheduling.quartz;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-sms-api/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-sms-api' presentationname='MoTeCH SMS API' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-sms-api/0.12-SNAPSHOT/motech-sms-api-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>Motech SMS API</description>
    <size>17936</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-sms-api'/>
      <p n='presentationname' v='MoTeCH SMS API'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.sms.api'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.springframework.osgi.web.context.support,javax.servlet,org.motechproject.server.event.annotations,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,org.springframework.beans.factory,org.springframework.stereotype,org.joda.time,org.motechproject.scheduler.domain'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.sms.api.constants'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.sms.api.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.joda.time,org.motechproject.sms.api,org.motechproject.scheduler.domain,org.apache.log4j,org.motechproject.scheduler.context,org.springframework.beans.factory.annotation,org.motechproject.scheduler,org.springframework.stereotype,org.motechproject.scheduler.event'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='false'>Import package org.apache.log4j</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-sms-api/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-sms-api' presentationname='MoTeCH SMS API' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-sms-api/0.11-SNAPSHOT/motech-sms-api-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>Motech SMS API</description>
    <size>17903</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-sms-api'/>
      <p n='presentationname' v='MoTeCH SMS API'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.sms.api'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.springframework.osgi.web.context.support,javax.servlet,org.motechproject.server.event.annotations,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,org.springframework.beans.factory,org.springframework.stereotype,org.joda.time,org.motechproject.scheduler.domain'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.sms.api.constants'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.sms.api.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.joda.time,org.motechproject.sms.api,org.motechproject.scheduler.domain,org.apache.log4j,org.motechproject.scheduler.context,org.springframework.beans.factory.annotation,org.motechproject.scheduler,org.springframework.stereotype,org.motechproject.scheduler.event'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='false'>Import package org.apache.log4j</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-sms-http/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-sms-http' presentationname='MoTeCH SMS HTTP' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-sms-http/0.12-SNAPSHOT/motech-sms-http-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>MoTeCH is a software system from Grameen Foundation that harnesses the ubiquity        of mobile phones to deliver and receive information from patient and caregivers.</description>
    <size>23882</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-sms-http'/>
      <p n='presentationname' v='MoTeCH SMS HTTP'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.sms.http'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.springframework.osgi.web.context.support,javax.servlet,org.motechproject.server.event.annotations,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,org.springframework.beans.factory,org.motechproject.scheduler.domain,org.motechproject.sms.http.service,org.springframework.beans.factory.annotation,org.springframework.stereotype,org.motechproject.sms.api,com.google.gson.reflect,org.motechproject.dao'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.sms.http.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.sms.api.service,org.joda.time,org.motechproject.sms.api,org.apache.commons.httpclient.auth,org.motechproject.sms.http,org.springframework.util,org.springframework.beans.factory.annotation,org.slf4j,org.apache.commons.httpclient,org.apache.commons.lang,org.apache.commons.httpclient.params,org.springframework.stereotype'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.google.gson.reflect)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package com.google.gson.reflect;version="[1.7,2)"</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient.auth))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient.auth</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient.methods))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient.methods</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient.params))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient.params</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.motechproject.sms.api))' extend='false' multiple='false' optional='false'>Import package org.motechproject.sms.api</require>
    <require name='package' filter='(&amp;(package=org.motechproject.sms.api.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.sms.api.service</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.scheduling.quartz)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.scheduling.quartz;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.util;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.bind.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-sms-http/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-sms-http' presentationname='MoTeCH SMS HTTP' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-sms-http/0.11-SNAPSHOT/motech-sms-http-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>MoTeCH is a software system from Grameen Foundation that harnesses the ubiquity        of mobile phones to deliver and receive information from patient and caregivers.</description>
    <size>23843</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-sms-http'/>
      <p n='presentationname' v='MoTeCH SMS HTTP'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.sms.http'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.springframework.osgi.web.context.support,javax.servlet,org.motechproject.server.event.annotations,org.springframework.web.servlet,org.springframework.web.context,org.slf4j,org.springframework.beans.factory,org.motechproject.scheduler.domain,org.motechproject.sms.http.service,org.springframework.beans.factory.annotation,org.springframework.stereotype,org.motechproject.sms.api,com.google.gson.reflect,org.motechproject.dao'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.sms.http.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.sms.api.service,org.joda.time,org.motechproject.sms.api,org.apache.commons.httpclient.auth,org.motechproject.sms.http,org.springframework.util,org.springframework.beans.factory.annotation,org.slf4j,org.apache.commons.httpclient,org.apache.commons.lang,org.apache.commons.httpclient.params,org.springframework.stereotype'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.google.gson.reflect)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package com.google.gson.reflect;version="[1.7,2)"</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient.auth))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient.auth</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient.methods))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient.methods</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.httpclient.params))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.httpclient.params</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.motechproject.sms.api))' extend='false' multiple='false' optional='false'>Import package org.motechproject.sms.api</require>
    <require name='package' filter='(&amp;(package=org.motechproject.sms.api.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.sms.api.service</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.scheduling.quartz)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.scheduling.quartz;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.util;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.bind.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
  </resource>
  <resource id='org.motechproject.motech-sms-smpp/0.12.0.SNAPSHOT' symbolicname='org.motechproject.motech-sms-smpp' presentationname='MoTeCH SMS SMPP' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-sms-smpp/0.12-SNAPSHOT/motech-sms-smpp-0.12-SNAPSHOT.jar' version='0.12.0.SNAPSHOT'>
    <description>MoTeCH SMS SMPP</description>
    <size>594581</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-sms-smpp'/>
      <p n='presentationname' v='MoTeCH SMS SMPP'/>
      <p n='version' t='version' v='0.12.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.sms.smpp'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.domain,org.apache.log4j,org.springframework.beans.factory.annotation,org.motechproject.util,org.joda.time,org.motechproject.scheduler.context,org.springframework.stereotype,org.motechproject.scheduler.event,org.ektorp.support,javax.annotation,org.slf4j,org.motechproject.sms.api,org.motechproject.scheduler.gateway,org.codehaus.jackson.annotate,org.motechproject.model,org.motechproject.sms.api.service,org.motechproject.server.event.annotations'/>
    </capability>
    <require name='package' filter='(&amp;(package=ch.lambdaj))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj</require>
    <require name='package' filter='(&amp;(package=javax.annotation))' extend='false' multiple='false' optional='false'>Import package javax.annotation</require>
    <require name='package' filter='(&amp;(package=javax.crypto))' extend='false' multiple='false' optional='false'>Import package javax.crypto</require>
    <require name='package' filter='(&amp;(package=javax.crypto.spec))' extend='false' multiple='false' optional='false'>Import package javax.crypto.spec</require>
    <require name='package' filter='(&amp;(package=javax.net))' extend='false' multiple='false' optional='false'>Import package javax.net</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='false'>Import package javax.net.ssl</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='false'>Import package javax.xml.parsers</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.net.telnet)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.net.telnet;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='false'>Import package org.apache.log4j</require>
    <require name='package' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.codehaus.jackson.annotate;version="[1.9,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.gateway))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.gateway</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.motechproject.sms.api))' extend='false' multiple='false' optional='false'>Import package org.motechproject.sms.api</require>
    <require name='package' filter='(&amp;(package=org.motechproject.sms.api.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.sms.api.service</require>
    <require name='package' filter='(&amp;(package=org.motechproject.util))' extend='false' multiple='false' optional='false'>Import package org.motechproject.util</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.util;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='false'>Import package org.xml.sax</require>
  </resource>
  <resource id='org.motechproject.motech-sms-smpp/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-sms-smpp' presentationname='MoTeCH SMS SMPP' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-sms-smpp/0.11-SNAPSHOT/motech-sms-smpp-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>MoTeCH SMS SMPP</description>
    <size>594543</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-sms-smpp'/>
      <p n='presentationname' v='MoTeCH SMS SMPP'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.sms.smpp'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.motechproject.scheduler.domain,org.apache.log4j,org.springframework.beans.factory.annotation,org.motechproject.util,org.joda.time,org.motechproject.scheduler.context,org.springframework.stereotype,org.motechproject.scheduler.event,org.ektorp.support,javax.annotation,org.slf4j,org.motechproject.sms.api,org.motechproject.scheduler.gateway,org.codehaus.jackson.annotate,org.motechproject.model,org.motechproject.sms.api.service,org.motechproject.server.event.annotations'/>
    </capability>
    <require name='package' filter='(&amp;(package=ch.lambdaj))' extend='false' multiple='false' optional='false'>Import package ch.lambdaj</require>
    <require name='package' filter='(&amp;(package=javax.annotation))' extend='false' multiple='false' optional='false'>Import package javax.annotation</require>
    <require name='package' filter='(&amp;(package=javax.crypto))' extend='false' multiple='false' optional='false'>Import package javax.crypto</require>
    <require name='package' filter='(&amp;(package=javax.crypto.spec))' extend='false' multiple='false' optional='false'>Import package javax.crypto.spec</require>
    <require name='package' filter='(&amp;(package=javax.net))' extend='false' multiple='false' optional='false'>Import package javax.net</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='false'>Import package javax.net.ssl</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='false'>Import package javax.xml.parsers</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.net.telnet)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.net.telnet;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='false'>Import package org.apache.log4j</require>
    <require name='package' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.codehaus.jackson.annotate;version="[1.9,2)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.joda.time)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.joda.time;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.context))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.context</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.domain))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.domain</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.event))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.event</require>
    <require name='package' filter='(&amp;(package=org.motechproject.scheduler.gateway))' extend='false' multiple='false' optional='false'>Import package org.motechproject.scheduler.gateway</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.event.annotations))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.event.annotations</require>
    <require name='package' filter='(&amp;(package=org.motechproject.sms.api))' extend='false' multiple='false' optional='false'>Import package org.motechproject.sms.api</require>
    <require name='package' filter='(&amp;(package=org.motechproject.sms.api.service))' extend='false' multiple='false' optional='false'>Import package org.motechproject.sms.api.service</require>
    <require name='package' filter='(&amp;(package=org.motechproject.util))' extend='false' multiple='false' optional='false'>Import package org.motechproject.util</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.config;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.util)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.util;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.context)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.context;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='false'>Import package org.xml.sax</require>
  </resource>
  <resource id='org.motechproject.motech-rules/0.11.0.SNAPSHOT' symbolicname='org.motechproject.motech-rules' presentationname='Unnamed - org.motechproject:motech-rules:bundle:0.11-SNAPSHOT' uri='file:/home/preethi/.m2/repository/org/motechproject/motech-rules/0.11-SNAPSHOT/motech-rules-0.11-SNAPSHOT.jar' version='0.11.0.SNAPSHOT'>
    <description>MoTeCH is a software system from Grameen Foundation that harnesses the ubiquity        of mobile phones to deliver and receive information from patient and caregivers.</description>
    <size>181841</size>
    <documentation>http://grameenfoundation.org/</documentation>
    <license>license.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.motechproject.motech-rules'/>
      <p n='presentationname' v='Unnamed - org.motechproject:motech-rules:bundle:0.11-SNAPSHOT'/>
      <p n='version' t='version' v='0.11.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.motechproject.rules.service.KnowledgeBaseManagerInterface'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.event.io'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.runtime'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.command,org.drools.time,org.drools.runtime.process,org.drools.event,org.drools.runtime.rule,org.drools,org.drools.runtime.conf'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.marshalling'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.runtime,org.drools'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.conf'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.runtime.rule'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.event'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.runtime,org.drools.event.process,org.drools.event.rule'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.event.knowledgebase'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.definition.rule,org.drools.definition,org.drools'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.io,org.drools.runtime,org.drools.definition.type,org.drools.event.knowledgebase,org.drools.definition.process,org.drools.definition,org.drools.definition.rule,org.drools.conf,org.drools.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.definition.process'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.definition'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.util'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools,org.drools.io,org.drools.builder'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.builder'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.runtime,org.drools,org.drools.io,org.drools.definition,org.drools.builder.conf,org.drools.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.builder.conf'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.runtime.rule,org.drools.conf'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.logger'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.event'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.runtime.process'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.runtime'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.runtime.conf'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.conf,org.drools.runtime.process'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.runtime.help'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='com.thoughtworks.xstream,org.quartz,org.drools.time'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.time'/>
      <p n='version' t='version' v='5.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.event.rule'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.event,org.drools.runtime.rule,org.drools.event.knowledgeagent'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.definition.rule'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.definition'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.osgi.api'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.osgi.framework,org.osgi.util.tracker,org.drools,org.drools.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.event.knowledgeagent'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools,org.drools.io,org.drools.definition,org.drools.agent,org.drools.builder'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.runtime.rule'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.definition.rule,org.drools.runtime'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.event.process'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.runtime.process,org.drools.event'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.definition'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.definition.process,org.drools.definition.rule'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.builder.help'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.io,org.drools,org.drools.builder,javax.xml.bind'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.definition.type'/>
      <p n='version' t='version' v='5.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.io'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools,org.drools.event.io,org.drools.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.agent'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.event.knowledgeagent,org.drools.runtime,org.drools.io,org.drools,org.drools.builder'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.command'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.runtime,org.drools.runtime.rule'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.task.service'/>
      <p n='version' t='version' v='5.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.persistence.jpa'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='org.drools.runtime,org.drools'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.drools.management'/>
      <p n='version' t='version' v='5.1.1'/>
      <p n='uses:' v='javax.management'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.rules'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.service.http,org.springframework.osgi.web.context.support,javax.servlet,org.springframework.web.servlet,org.slf4j,org.motechproject.server.osgi,org.springframework.beans.factory.annotation,org.apache.commons.io,org.motechproject.rules.service'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.motechproject.rules.service'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='uses:' v='org.springframework.beans.factory.annotation,org.slf4j,org.drools,org.drools.builder,org.drools.io,org.apache.commons.io'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.thoughtworks.xstream))' extend='false' multiple='false' optional='false'>Import package com.thoughtworks.xstream</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.servlet))' extend='false' multiple='false' optional='false'>Import package javax.servlet</require>
    <require name='package' filter='(&amp;(package=javax.xml.bind))' extend='false' multiple='false' optional='false'>Import package javax.xml.bind</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.io)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.io;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.ektorp))' extend='false' multiple='false' optional='false'>Import package org.ektorp</require>
    <require name='package' filter='(&amp;(package=org.ektorp.impl))' extend='false' multiple='false' optional='false'>Import package org.ektorp.impl</require>
    <require name='package' filter='(&amp;(package=org.ektorp.spring))' extend='false' multiple='false' optional='false'>Import package org.ektorp.spring</require>
    <require name='package' filter='(&amp;(package=org.ektorp.support))' extend='false' multiple='false' optional='false'>Import package org.ektorp.support</require>
    <require name='package' filter='(&amp;(package=org.motechproject.dao))' extend='false' multiple='false' optional='false'>Import package org.motechproject.dao</require>
    <require name='package' filter='(&amp;(package=org.motechproject.model))' extend='false' multiple='false' optional='false'>Import package org.motechproject.model</require>
    <require name='package' filter='(&amp;(package=org.motechproject.server.osgi))' extend='false' multiple='false' optional='false'>Import package org.motechproject.server.osgi</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.http;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.quartz))' extend='false' multiple='false' optional='false'>Import package org.quartz</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.annotation;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.beans.factory.xml;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.config)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.context.config;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.web.context.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.osgi.web.context.support;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.stereotype;version="[3.0,4)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.springframework.web.servlet;version="[3.0,4)"</require>
  </resource>
</repository>